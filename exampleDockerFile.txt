



#WORKDIR home/api
#COPY .mvn/ .mvn
#COPY mvnw pom.xml ./
#RUN ./mvnw dependency:resolve
#COPY src ./src
#CMD ["./mvnw", "spring-boot:run"]








#FROM openjdk:17-jdk-slim
#ARG JAR_FILE=target/*.jar
#COPY ${JAR_FILE} app.jar
#EXPOSE 8080
##VOLUME /home/euhenios/Загрузки/IdeaProjects/PassportApi/docker
#ENTRYPOINT ["java", "-jar", "app.jar"]



#ENV M2_HOME=/opt/maven
#ENV export MAVEN_HOME=/opt/maven
#ENV export PATH=/opt/maven/bin:${PATH}
#
##
## Build stage
##
#FROM maven:3.8-openjdk-17-slim AS build
#COPY src /home/app/src
#COPY pom.xml /home/app
#RUN mvn -f /home/app/pom.xml clean package -DskipTests
#
##
## Package stage
##
#FROM openjdk:17-jdk-slim
#ARG JAR_FILE=target/*.jar
#COPY ${JAR_FILE} app.jar
#ENTRYPOINT ["java", "-jar", "app.jar"]


#FROM maven:3.8-openjdk-17-slim
FROM openjdk:17-jdk-slim as production
EXPOSE 8080
COPY --from=build /app/target/*.jar /app.jar
CMD ["java", "-Djava.security.egd=file:/dev/./urandom", "-jar", "/app.jar"]

# syntax=docker/dockerfile:1

FROM eclipse-temurin:17-jdk-jammy
WORKDIR /app
COPY .mvn .mvn
COPY mvnw pom.xml ./
RUN ./mvnw dependency:resolve
COPY src ./src
CMD ["./mvnw", "spring-boot:run"]
